PS C:\Users\madame\Desktop\йцу> git clone git@github.com:kDv44/pinen.git
Cloning into 'pinen'...
warning: You appear to have cloned an empty repository.
PS C:\Users\madame\Desktop\йцу> cd .\pinen\
PS C:\Users\madame\Desktop\йцу\pinen> touch test.txt
touch : The term 'touch' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the
path is correct and try again.
At line:1 char:1
+ touch test.txt
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (touch:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m "add txt file"
[main (root-commit) eab7671] add txt file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt
PS C:\Users\madame\Desktop\йцу\pinen> git branch patch2
PS C:\Users\madame\Desktop\йцу\pinen> git checkout patch2
Switched to branch 'patch2'
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch patch2
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.txt

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m "add ver1"
[patch2 e0d86ff] add ver1
 1 file changed, 1 insertion(+)
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch patch2
nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git checkout main
Switched to branch 'main'
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
PS C:\Users\madame\Desktop\йцу\pinen> git branch fix1
PS C:\Users\madame\Desktop\йцу\pinen> git checkout fix1
Switched to branch 'fix1'
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch fix1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fix1.txt

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'fix1'
[fix1 b559d42] fix1
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 fix1.txt
PS C:\Users\madame\Desktop\йцу\pinen> git checkout main
Switched to branch 'main'
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
PS C:\Users\madame\Desktop\йцу\pinen> git marge fix1
git: 'marge' is not a git command. See 'git --help'.

The most similar command is
        merge
PS C:\Users\madame\Desktop\йцу\pinen> git merge fix1
Updating eab7671..b559d42
Fast-forward
 fix1.txt | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 fix1.txt
PS C:\Users\madame\Desktop\йцу\pinen> git merge patch2
Merge made by the 'ort' strategy.
 test.txt | 1 +
 1 file changed, 1 insertion(+)
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'fix__'
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> ls


    Directory: C:\Users\madame\Desktop\йцу\pinen


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         2/19/2023   7:14 PM              0 fix1.txt
-a----         2/19/2023   7:15 PM              7 test.txt


PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git merge fix1
Already up to date.
PS C:\Users\madame\Desktop\йцу\pinen> git merge patch2
Already up to date.
PS C:\Users\madame\Desktop\йцу\pinen> git branch -d patch2
Deleted branch patch2 (was e0d86ff).
PS C:\Users\madame\Desktop\йцу\pinen> git branch -d fix1
Deleted branch fix1 (was b559d42).
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> got commit -m 'ver1'
got : The term 'got' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the
path is correct and try again.
At line:1 char:1
+ got commit -m 'ver1'
+ ~~~
    + CategoryInfo          : ObjectNotFound: (got:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'ver1'
[main e1c8a94] ver1
 1 file changed, 1 insertion(+)
 create mode 100644 conflict.txt
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git bramch project2
git: 'bramch' is not a git command. See 'git --help'.

The most similar command is
        branch
PS C:\Users\madame\Desktop\йцу\pinen> git branch project2
PS C:\Users\madame\Desktop\йцу\pinen> git branch project3
PS C:\Users\madame\Desktop\йцу\pinen> git checkout project2
Switched to branch 'project2'
PS C:\Users\madame\Desktop\йцу\pinen> git checkout project3
Switched to branch 'project3'
M       conflict.txt
PS C:\Users\madame\Desktop\йцу\pinen> git checkout project2
Switched to branch 'project2'
M       conflict.txt
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch project2
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   conflict.txt

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'ver2'
[project2 3b0e91d] ver2
 1 file changed, 2 insertions(+), 1 deletion(-)
PS C:\Users\madame\Desktop\йцу\pinen> git checkout project3
Switched to branch 'project3'
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'ver3'
[project3 0cee61d] ver3
 1 file changed, 2 insertions(+), 1 deletion(-)
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch project3
nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git checkkout main
git: 'checkkout' is not a git command. See 'git --help'.

The most similar command is
        checkout
PS C:\Users\madame\Desktop\йцу\pinen> git checkout main
Switched to branch 'main'
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
PS C:\Users\madame\Desktop\йцу\pinen> git merge project2
Updating e1c8a94..3b0e91d
Fast-forward
 conflict.txt | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
PS C:\Users\madame\Desktop\йцу\pinen> git merge project3
Auto-merging conflict.txt
CONFLICT (content): Merge conflict in conflict.txt
Automatic merge failed; fix conflicts and then commit the result.
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   conflict.txt

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'fix comflict'
[main 1bf3b6e] fix comflict
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is based on 'origin/main', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)

nothing to commit, working tree clean
PS C:\Users\madame\Desktop\йцу\pinen> git push origin main
Enumerating objects: 22, done.
Counting objects: 100% (22/22), done.
Delta compression using up to 16 threads
Compressing objects: 100% (14/14), done.
Writing objects: 100% (22/22), 1.86 KiB | 633.00 KiB/s, done.
Total 22 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), done.
To github.com:kDv44/pinen.git
 * [new branch]      main -> main
PS C:\Users\madame\Desktop\йцу\pinen> git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    fix1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\madame\Desktop\йцу\pinen> git add .
PS C:\Users\madame\Desktop\йцу\pinen> git commit -m 'archive'
[main e9cd7f3] archive
 2 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 delete mode 100644 fix1.txt
PS C:\Users\madame\Desktop\йцу\pinen> git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 16 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 316 bytes | 316.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:kDv44/pinen.git
   1bf3b6e..e9cd7f3  main -> main
PS C:\Users\madame\Desktop\йцу\pinen>